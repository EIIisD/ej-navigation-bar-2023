@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "easyJet Rounded";
  font-weight: 400;
  font-style: normal;
  src: url("/fonts/easyjet_rounded_book.ttf") format("truetype");
}

@font-face {
  font-family: "easyJet Rounded";
  font-weight: 600;
  font-style: normal;
  src: url("/fonts/easyjet_rounded_demi.ttf") format("truetype");
}

@font-face {
  font-family: "easyJet Rounded";
  font-weight: 300;
  font-style: normal;
  src: url("/fonts/easyjet_rounded_light.ttf") format("truetype");
}

@font-face {
  font-family: "easyJet Generation CY";
  font-weight: 400;
  font-style: normal;
  src: url("/fonts/easyjet_generation_headline_new.otf") format("opentype");
}

@layer base {
  :root {
    --page-maxWidth: theme("screens.tablet-header-width");
    --header-maxWidth: theme("screens.desktop-header-width");
    --dialog-maxWidth: theme("maxWidth.xl");
    --header-height: var(--primary-header-height);
    --general-bar-height: theme("height.12");
    --page-inset-large: theme("spacing.9");
    --page-inset: theme("spacing.6");
    --page-inset-small: theme("spacing.3");
    --print-gap-xs: 2.5mm;
    --print-gap-sm: 5mm;
    --print-gap: 10mm;
    --print-gap-lg: 10mm;

    /* easyJet brand container angles */
    --clip-angle: 7/8;
    --clip-angle-section: polygon(0 0, 100% 0%, 100% calc(100% * var(--clip-angle)), 0% 100%);
    --clip-angle-section-sub: polygon(0 0, 100% 0%, 100% 100%, 0% calc(100% * var(--clip-angle)));
    --clip-angle-box: polygon(0 0, 100% 0%, 100% calc(100% * var(--clip-angle)), 0% 100%);
    --clip-angle-box-right: polygon(0 0, 100% 0%, calc(100% * var(--clip-angle)) 100%, 0% 100%);

    /* calculated via https://seek-oss.github.io/capsize/ */
    --font-offset-start: 0.12451171875em;
    --font-offset-end: 0.17529296875em;
    --font-adjust: 1.4281729428172942;
  }

  :root:has([data-primary-header="visible"]) {
    --primary-header-height: 56px;
  }
  :root:has([data-secondary-header="visible"]) {
    --secondary-header-height: var(--general-bar-height);
  }
  :root:has([data-tertiary-header="visible"]) {
    --tertiary-header-height: var(--general-bar-height);
  }

  :root,
  :root:has([data-primary-header="hidden"]) {
    --primary-header-height: 0px;
  }
  :root,
  :root:has([data-secondary-header="hidden"]) {
    --secondary-header-height: 0px;
  }
  :root,
  :root:has([data-tertiary-header="hidden"]) {
    --tertiary-header-height: 0px;
  }

  @screen tablet-header-width {
    :root {
      --clip-angle: 3/4;
      --header-height: calc(var(--tertiary-header-height) + var(--secondary-header-height) + var(--primary-header-height));
      --page-inset-large: theme("spacing.12");
      --page-inset: theme("spacing.9");
      --page-inset-small: theme("spacing.6");
    }

    #simulator {
      --page-inset-large: theme("spacing.12");
      --page-inset: theme("spacing.10");
      --page-inset-small: theme("spacing.8");
    }
  }

  html {
    height: 100%;
    overflow-y: scroll;
    scroll-behavior: smooth;
    scrollbar-gutter: stable;
  }

  body {
    @apply bg-white font-sans text-base text-primary antialiased;
    display: flex;
    flex-direction: column;
    min-height: 100%;
    font-feature-settings:
      "rlig" 1,
      "calt" 1;
    -webkit-tap-highlight-color: transparent;
  }

  #simulator {
    @apply flex flex-auto flex-col;
  }

  :where(symbol, svg):not(:root, .overflow-hidden) {
    overflow: visible;
  }

  :where(button) {
    text-align: inherit;
  }

  :focus {
    outline: none;
  }

  :focus:not(:focus-visible) {
    outline: none;
  }

  @media (hover: none) {
    :focus {
      outline: none;
    }
  }

  ::-webkit-scrollbar {
    display: none;
  }

  @media print {
    body > :not(#print-content) {
      display: none !important;
    }
  }

  @media not print {
    body > #print-content {
      display: none !important;
    }
  }

  @page {
    size: a4;
    margin: 10mm;
  }
}

@layer components {
  .list {
    @apply ml-3 list-outside list-disc space-y-1 pb-1;
  }
  .list > li {
    @apply list-item pl-0.5 marker:text-tertiary;
  }

  /* --pass-border-color: theme("colors.orange.darker");
  --pass-cutout-size: 24px;
  --pass-cutout-margin: (var(--page-inset) + 1px); */

  /* .boarding-pass-mask {
    --r: 40px;
    --mask: radial-gradient(var(--r) at var(--r) 50%, #0000 98%, #000) calc(var(--r) * -1);
    -webkit-mask: var(--mask);
    mask: var(--mask);
  } */

  .pdf .\[break-after\:page\] {
    @apply h-[297mm];
    @apply mb-[10mm];
    @apply relative after:absolute after:left-[-10mm] after:bottom-[10mm] after:h-[10mm] after:w-[100vw] after:translate-y-[10mm] after:bg-[#444];
  }

  [class][class*="text-"],
  [class][class*="text-"]:before,
  [class][class*="text-"]:after {
    @apply print:text-black;
  }

  [class][class*="bg-"],
  [class][class*="bg-"]:before,
  [class][class*="bg-"]:after {
    @apply print:bg-white;
  }

  [class][class*="border"],
  [class][class*="border"]:before,
  [class][class*="border"]:after {
    @apply print:border-black;
  }

  [class][class*="shadow"],
  [class][class*="shadow"]:before,
  [class][class*="shadow"]:after {
    @apply print:shadow-none;
  }

  [class][class*="outline-"],
  [class][class*="outline-"]:before,
  [class][class*="outline-"]:after {
    @apply print:outline-black;
  }

  svg,
  use {
    @apply print:text-black print:brightness-100 print:contrast-[107%] print:hue-rotate-[312deg] print:invert-0 print:saturate-[7500%] print:sepia-0;
  }
}

@layer utilities {
  .events-none {
    pointer-events: none;
    touch-action: none;
    user-select: none;
  }

  :root.debug {
    --debug-outline-color: 50 50;
    --debug-background-color: 95 25;
    --debug-opacity: 100%;
    --debug-outline: 0.5px;
  }

  :root.debug body > *,
  :root.debug body > * > *,
  :root.debug body > * > * > *,
  :root.debug body > * > * > * > *,
  :root.debug body > * > * > * > * > *,
  :root.debug body > * > * > * > * > * > * {
    outline: var(--debug-outline) solid lch(var(--debug-outline-color) var(--hue)) !important;
    outline-offset: calc(var(--debug-outline) / -2) !important;
    background-color: lch(var(--debug-background-color) var(--hue) / var(--debug-opacity)) !important;
  }

  :root.debug body > * {
    --hue: 0.2turn;
  }
  :root.debug body > * > * {
    --hue: 0.6turn;
  }
  :root.debug body > * > * > * {
    --hue: 1turn;
  }
  :root.debug body > * > * > * > * {
    --hue: 1.4turn;
  }
  :root.debug body > * > * > * > * > * {
    --hue: 1.8turn;
  }
  :root.debug body > * > * > * > * > * > * {
    --hue: 2.2turn;
  }

  .scrollbar-none {
    scrollbar-width: none;
  }

  .scrollbar-none::-webkit-scrollbar {
    display: none;
  }

  .rounded {
    --rounded: theme("borderRadius.DEFAULT");
  }
  .rounded-sm {
    --rounded: theme("borderRadius.sm");
  }
  .rounded-md {
    --rounded: theme("borderRadius.md");
  }
  .rounded-lg {
    --rounded: theme("borderRadius.lg");
  }
  .rounded-xl {
    --rounded: theme("borderRadius.xl");
  }
  .rounded-2xl {
    --rounded: theme("borderRadius.2xl");
  }
  .rounded-3xl {
    --rounded: theme("borderRadius.3xl");
  }
  .rounded-full {
    --rounded: theme("borderRadius.full");
  }
}
