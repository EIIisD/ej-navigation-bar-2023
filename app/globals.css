@font-face {
  font-family: "easyJet Rounded";
  font-weight: 400;
  font-style: normal;
  src: url("/fonts/easyjet_rounded_book.ttf") format("truetype");
}

@font-face {
  font-family: "easyJet Rounded";
  font-weight: 600;
  font-style: normal;
  src: url("/fonts/easyjet_rounded_demi.ttf") format("truetype");
}

@font-face {
  font-family: "easyJet Rounded";
  font-weight: 300;
  font-style: normal;
  src: url("/fonts/easyjet_rounded_light.ttf") format("truetype");
}

@font-face {
  font-family: "easyJet Generation CY";
  font-weight: 400;
  font-style: normal;
  src: url("/fonts/easyjet_generation_headline_new.otf") format("opentype");
}

/* @page {
  size: A4 portrait;
  margin-top: theme("spacing.print-bleed");
  margin-bottom: theme("spacing.print-bleed");
} */

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --page-maxWidth: theme("screens.tablet-header-width");
    --header-maxWidth: theme("screens.desktop-header-width");
    --dialog-maxWidth: theme("maxWidth.xl");
    --header-height: var(--primary-header-height);
    --general-bar-height: theme("height.12");
    --page-inset-large: theme("spacing.9");
    --page-inset: theme("spacing.6");
    --page-inset-small: theme("spacing.3");

    /* easyJet brand container angles */
    --clip-angle: 7/8;
    --clip-angle-section: polygon(0 0, 100% 0%, 100% calc(100% * var(--clip-angle)), 0% 100%);
    --clip-angle-section-sub: polygon(0 0, 100% 0%, 100% 100%, 0% calc(100% * var(--clip-angle)));
    --clip-angle-box: polygon(0 0, 100% 0%, 100% calc(100% * var(--clip-angle)), 0% 100%);
    --clip-angle-box-right: polygon(0 0, 100% 0%, calc(100% * var(--clip-angle)) 100%, 0% 100%);

    /* calculated via https://seek-oss.github.io/capsize/ */
    --font-offset-start: 0.12451171875em;
    --font-offset-end: 0.17529296875em;
    --font-adjust: 1.4281729428172942;
  }

  :root:has([data-primary-header="visible"]) {
    --primary-header-height: 56px;
  }
  :root:has([data-secondary-header="visible"]) {
    --secondary-header-height: var(--general-bar-height);
  }
  :root:has([data-tertiary-header="visible"]) {
    --tertiary-header-height: var(--general-bar-height);
  }

  :root,
  :root:has([data-primary-header="hidden"]) {
    --primary-header-height: 0px;
  }
  :root,
  :root:has([data-secondary-header="hidden"]) {
    --secondary-header-height: 0px;
  }
  :root,
  :root:has([data-tertiary-header="hidden"]) {
    --tertiary-header-height: 0px;
  }

  @screen tablet-header-width {
    :root {
      --clip-angle: 3/4;
      --header-height: calc(var(--tertiary-header-height) + var(--secondary-header-height) + var(--primary-header-height));
      --page-inset-large: theme("spacing.12");
      --page-inset: theme("spacing.9");
      --page-inset-small: theme("spacing.6");
    }
  }

  html {
    height: 100%;
    overflow-y: scroll;
    scroll-behavior: smooth;
    scrollbar-gutter: stable;
  }

  body {
    @apply bg-white font-sans text-base text-primary antialiased;
    display: flex;
    flex-direction: column;
    min-height: 100%;
    font-feature-settings:
      "rlig" 1,
      "calt" 1;
    -webkit-tap-highlight-color: transparent;
  }

  #simulator {
    @apply flex flex-auto flex-col;
  }

  :where(symbol, svg):not(:root, .overflow-hidden) {
    overflow: visible;
  }

  :where(button) {
    text-align: inherit;
  }

  :focus {
    /* outline: 1px solid invert;
    outline-offset: 4px; */
    outline: none;
  }

  :focus:not(:focus-visible) {
    outline: none;
  }

  @media (hover: none) {
    :focus {
      outline: none;
    }
  }
}

@layer components {
  .\@container\/pass {
    --border-width: 2px;
    --featured-icon-size: theme("spacing.10-cqi");
    --margin: 10mm;

    /* unused */
    --spacing-sm: 3mm;
    --spacing: 5mm;
    --spacing-lg: 8mm;
  }

  .list {
    @apply space-y-2;
  }
  .list > li {
    @apply list-item pl-1 before:mr-1.5 before:text-tertiary before:content-['â€¢'];
  }

  /* --pass-border-color: theme("colors.orange.darker");
  --pass-cutout-size: 24px;
  --pass-cutout-margin: (var(--page-inset) + 1px); */

  /* .group\/pass:before {
    @apply absolute inset-0 bg-[inherit] [mask:linear-gradient(to_bottom,rgb(0_0_0/0)_0%,rgb(0_0_0/1)_100%)] mix-blend-multiply opacity-10 content-[''] pointer-events-none touch-none;
  } */

  /*.threshold {
    /~ backdrop-filter: blur(0.05px); ~/
    filter: url(#threshold);
  }

  :root .print .print\:hidden {
    display: none;
  }

  :root .print *,
  :root .print *:before,
  :root .print *:after {
    border-color: black;
    color: black;
    fill: black;
    stroke: black;
    outline-color: black;
    background-color: white;
  }

  :root .print *[class*="shadow"],
  :root .print *::after[class*="shadow"],
  :root .print *::before[class*="shadow"] {
    box-shadow: 0 0 0 1px black;
  }
  /~ :root .print *[class*="bg-"],
  :root .print *::after[class*="bg-"],
  :root .print *::before[class*="bg-"] {
    background-color: white;
  } ~/
  :root .print use {
    filter: url(#threshold);
  }*/

  .boarding-pass-mask {
    --r: 40px;
    --mask: radial-gradient(var(--r) at var(--r) 50%, #0000 98%, #000) calc(var(--r) * -1);
    -webkit-mask: var(--mask);
    mask: var(--mask);
  }

  ::-webkit-scrollbar {
    display: none;
  }
}

@layer utilities {
  .threshold .threshold\:hidden {
    display: none;
  }

  .threshold,
  .threshold [class*="text-"],
  .threshold [class*="text-"]:before,
  .threshold [class*="text-"]:after {
    @apply !text-black;
  }
  .threshold [class*="bg-"],
  .threshold [class*="bg-"]:before,
  .threshold [class*="bg-"]:after {
    @apply !bg-white;
  }
  .threshold [class*="border"],
  .threshold [class*="border"]:before,
  .threshold [class*="border"]:after {
    @apply !border-black;
  }
  .threshold [class*="shadow"],
  .threshold [class*="shadow"]:before,
  .threshold [class*="shadow"]:after {
    @apply !shadow-none;
  }
  .threshold [class*="outline-"],
  .threshold [class*="outline-"]:before,
  .threshold [class*="outline-"]:after {
    @apply !outline-black;
  }
  .threshold svg {
    /* @apply !saturate-0; */
    @apply !text-black;
    filter: invert(0%) sepia(0%) saturate(7500%) hue-rotate(312deg) brightness(100%) contrast(107%);
  }

  .events-none {
    pointer-events: none;
    touch-action: none;
    user-select: none;
  }

  .debug {
    --debug-outline-color: 50 50;
    --debug-background-color: 95 25;
    --debug-opacity: 100%;
    --debug-outline: 0.5px;
  }
  .debug :is(section, .grid) > *,
  .debug :is(section, .grid) > * > *,
  .debug :is(section, .grid) > * > * > *,
  .debug :is(section, .grid) > * > * > * > *,
  .debug :is(section, .grid) > * > * > * > * > *,
  .debug :is(section, .grid) > * > * > * > * > * > * {
    outline: var(--debug-outline) solid lch(var(--debug-outline-color) var(--hue)) !important;
    outline-offset: calc(var(--debug-outline) / -2) !important;
    background-color: lch(var(--debug-background-color) var(--hue) / var(--debug-opacity)) !important;
  }

  .debug :is(section, .grid) > * {
    --hue: 0.2turn;
  }
  .debug :is(section, .grid) > * > * {
    --hue: 0.6turn;
  }
  .debug :is(section, .grid) > * > * > * {
    --hue: 1turn;
  }
  .debug :is(section, .grid) > * > * > * > * {
    --hue: 1.4turn;
  }
  .debug :is(section, .grid) > * > * > * > * > * {
    --hue: 1.8turn;
  }
  .debug :is(section, .grid) > * > * > * > * > * > * {
    --hue: 2.2turn;
  }

  .debug-grid,
  .debug-grid * {
    background-color: theme("colors.sky.500/10%");
  }

  .scrollbar-none {
    scrollbar-width: none;
  }

  .scrollbar-none::-webkit-scrollbar {
    display: none;
  }

  .rounded {
    --rounded: theme("borderRadius.DEFAULT");
  }
  .rounded-sm {
    --rounded: theme("borderRadius.sm");
  }
  .rounded-md {
    --rounded: theme("borderRadius.md");
  }
  .rounded-lg {
    --rounded: theme("borderRadius.lg");
  }
  .rounded-xl {
    --rounded: theme("borderRadius.xl");
  }
  .rounded-2xl {
    --rounded: theme("borderRadius.2xl");
  }
  .rounded-3xl {
    --rounded: theme("borderRadius.3xl");
  }
  .rounded-full {
    --rounded: theme("borderRadius.full");
  }
}
